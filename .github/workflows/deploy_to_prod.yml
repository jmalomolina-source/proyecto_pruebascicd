# Archivo: .github/workflows/deploy_to_prod.yml

name: Despliegue a Carpeta Local PRO

# 1. Configuración de Disparador (Trigger)
# Se ejecuta cuando se fusiona cualquier Pull Request A la rama 'master' (o 'main')
on:
  push:
    branches:
      - main
      # Si usas 'main' en lugar de 'master', cambia la línea anterior a: - main
  workflow_dispatch: # Permite ejecución manual desde GitHub

# 2. Definición del Trabajo (Job) de Despliegue
jobs:
  deploy:
    # Usaremos un runner de Windows, ya que tu ruta de destino es de Windows (C:\)
    # En producción real, usarías un runner personalizado o SSH para el servidor PRO.
    runs-on: windows-latest 
    environment: produccion # Opcional: Para usar Secretos/Variables de entorno específicos de PRO

    steps:
      # Paso 1: Descargar el código
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      # Paso 2: Configurar el ambiente Python
      - name: Configurar Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      # Paso 3: Instalar las dependencias de la rama master
      - name: Instalar dependencias
        run: pip install -r requirements.txt
        shell: powershell

     # Paso 4: Despliegue a Servidor Remoto (Tu PC)
      - name: Despliegue Remoto vía SSH
        uses: appleboy/ssh-action@v1.0.3 # Una de las Actions SSH más populares
        with:
          # --- Credenciales Seguras (Guardadas como Secrets de GitHub) ---
          host: ${{ secrets.SSH_HOST }}        # Ejemplo: 192.168.1.10 o un dominio
          username: ${{ secrets.SSH_USERNAME }}  # Tu nombre de usuario de Windows/SSH
          key: ${{ secrets.SSH_PRIVATE_KEY }}   # Tu clave privada SSH (¡Más seguro!)
          port: 22                             # El puerto SSH (por defecto 22)

          # --- Comando de Despliegue ---
          # Ejecuta los comandos en el servidor remoto (tu PC)
          script: |
            # 1. Crea la carpeta de destino en el servidor (si no existe)
            if not exist "C:\jmalo\FUENTES\GITHUB\fuentes\pro\ejecutable" mkdir "C:\jmalo\FUENTES\GITHUB\fuentes\pro\ejecutable"
            
            # 2. Transfiere todos los archivos (usando SCP interno)
            # Nota: SCP transfiere los archivos primero, y luego se ejecuta este script
            
            # 3. Mover los archivos transferidos al destino final
            # (El path exacto puede variar según la Action, pero la idea es ejecutar el comando final de copia)
            echo "Archivos transferidos y listos para uso."
            
          # --- Transferencia de Archivos ---
          # El archivo a copiar desde el runner de GitHub (source) al destino (target)
          source: "./" # El directorio de trabajo de GitHub Actions
          target: "C:/jmalo/FUENTES/GITHUB/fuentes/pro/ejecutable/" # La carpeta en tu PC
